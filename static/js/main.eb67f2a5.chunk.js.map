{"version":3,"sources":["redux/utils.ts","components/post/post.tsx","components/spinner/spinner.tsx","components/feed/actions.ts","components/feed/feed.tsx","components/search-bar/actions.ts","components/list-item/ListItem.tsx","components/search-bar/SearchBar.tsx","components/navbar/Navbar.tsx","screens/home/actions.ts","screens/home/home.tsx","App.tsx","reportWebVitals.ts","redux/reducers/feedReducer.ts","redux/reducers/searchReducer.ts","redux/reducers/userReducer.ts","network-requests/requests.ts","components/feed/saga.ts","components/search-bar/saga.ts","screens/home/saga.ts","redux/rootSaga.ts","redux/store.ts","index.tsx"],"names":["useAppSelector","useSelector","Post","username","title","body","children","className","Spinner","Fragment","GET_POSTS","SET_POSTS","Feed","postList","state","feed","posts","dispatch","useDispatch","useEffect","type","searchResults","user","users","length","map","e","find","el","id","userId","toString","SEARCH","SET_SEARCH_RESULTS","setSearchResults","data","ListItem","subtitle","SearchBar","inputRef","useRef","useState","focused","setFocused","value","setValue","listener","target","closest","document","addEventListener","removeEventListener","search","ref","placeholder","onFocus","onInput","icon","faSearch","onClick","faTimesCircle","motion","div","initial","opacity","animate","transition","duration","name","Navbar","GET_USERS","SET_USERS","setUsers","Home","allUsers","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","BASE_URL","getAllUsers","a","axios","get","response","getUser","post","getPosts","handleGetPosts","feedSagas","takeLatest","call","put","console","error","handleUserSearch","searchSagas","action","store","getState","filter","toLowerCase","includes","log","handleGetUsers","homeSagas","rootSaga","all","reducers","combineReducers","sagaMiddleware","createSagaMiddleware","middlewares","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb67f2a5.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from \"react\";\r\nimport PostProps from \"../../interfaces/props/PostProps\";\r\n\r\nconst Post: React.FC<PostProps> = ({ username, title, body, children }) => {\r\n    return (\r\n        <div className=\"feed__post\">\r\n            <div className=\"feed__post__username\">{username}</div>\r\n            {/* <hr className=\"feed__post__divider\" /> */}\r\n\r\n            <div className=\"feed__post__body\">\r\n                <div className=\"feed__post__body__title\">{title}</div>\r\n                <div className=\"feed__post__body__content\">\r\n                    {children && children}\r\n                    {body}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport \"./spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n    // return <ReactComponent />;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"loadingio-spinner-disk-nhajlk4gbpl\">\r\n                <div className=\"ldio-0xbwh66nwucj\">\r\n                    <div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import { AppAction } from \"../../interfaces/action\";\r\nimport { Post } from \"../../interfaces/post\";\r\n\r\nexport const GET_POSTS = \"get_posts\";\r\nexport const SET_POSTS = \"set_posts\";\r\n\r\nexport const getPosts = (): AppAction<undefined> => ({ type: GET_POSTS });\r\nexport const setPosts = (posts: Post[]): AppAction<Post[]> => ({\r\n    type: SET_POSTS,\r\n    data: posts,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Post as PostType } from \"../../interfaces/post\";\r\nimport { useAppSelector } from \"../../redux/utils\";\r\nimport Post from \"../post/post\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport { getPosts } from \"./actions\";\r\nimport \"./feed.scss\";\r\n\r\nconst Feed = () => {\r\n    const postList = useSelector(\r\n        (state: any) => state.feed.posts\r\n    ) as PostType[];\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n    }, []);\r\n\r\n    const searchResults = useAppSelector((state) => state.user.users);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            {postList.length ? (\r\n                postList.map((e) => (\r\n                    <Post\r\n                        key={e.id}\r\n                        username={(() =>\r\n                            searchResults.find((el) => el.id === e.userId)\r\n                                ?.username || e.userId.toString())()}\r\n                        title={e.title}\r\n                        body={e.body}\r\n                    />\r\n                ))\r\n            ) : (\r\n                <Spinner />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feed;\r\n","import { AppAction } from \"../../interfaces/action\";\r\nimport { User } from \"../../interfaces/user\";\r\n\r\nexport const SEARCH = \"search\";\r\nexport const SET_SEARCH_RESULTS = \"set_search_results\";\r\n\r\nexport const search = (searchText: string): AppAction<string> => ({\r\n    type: SEARCH,\r\n    data: searchText,\r\n});\r\nexport const setSearchResults = (users: User[]): AppAction<User[]> => ({\r\n    type: SET_SEARCH_RESULTS,\r\n    data: users,\r\n});\r\n","import React from \"react\";\r\nimport ListItemProps from \"../../interfaces/props/ListItemProps\";\r\nimport \"./ListItem.scss\";\r\n\r\nconst ListItem: React.FC<ListItemProps> = ({ title, subtitle }) => {\r\n    return (\r\n        <li className=\"list-item\">\r\n            <div className=\"list-item__title\">{title}</div>\r\n            <div className=\"list-item__subtitle\">{subtitle}</div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n","import \"./SearchBar.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useAppSelector } from \"../../redux/utils\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { search } from \"./actions\";\r\nimport ListItem from \"../list-item/ListItem\";\r\n\r\nconst SearchBar = () => {\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focused, setFocused] = useState(false);\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const listener = (e: MouseEvent) => {\r\n            if (!(e.target as any).closest(\"#user-search-container\")) {\r\n                setFocused(false);\r\n            }\r\n        };\r\n        document.body.addEventListener(\"click\", listener);\r\n        return () => {\r\n            document.body.removeEventListener(\"click\", listener);\r\n        };\r\n    }, []);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(search(value));\r\n    }, [value]);\r\n\r\n    const handleInputFocused = () => {\r\n        setFocused(true);\r\n    };\r\n\r\n    const handleCloseButton = () => {\r\n        setValue(\"\");\r\n        setFocused(false);\r\n    };\r\n\r\n    const handleInput = (e: any) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const searchResults = useAppSelector((state) => state.search.users);\r\n\r\n    const buildSuggestionList = () => {\r\n        return searchResults.map((e) => (\r\n            <ListItem title={e.username} subtitle={e.name} key={e.id} />\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div id=\"user-search-container\">\r\n            <input\r\n                type=\"text\"\r\n                ref={inputRef}\r\n                placeholder={focused ? \"Search\" : \"\"}\r\n                onFocus={handleInputFocused}\r\n                value={value}\r\n                onInput={handleInput}\r\n            />\r\n            {!focused && !value && (\r\n                <div className=\"placeholder\">\r\n                    <FontAwesomeIcon\r\n                        className=\"placeholder__search-icon\"\r\n                        icon={faSearch}\r\n                    />\r\n                    <span>Search</span>\r\n                </div>\r\n            )}\r\n            {focused && (\r\n                <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\r\n            )}\r\n            {focused && (\r\n                <FontAwesomeIcon\r\n                    onClick={handleCloseButton}\r\n                    className=\"close\"\r\n                    icon={faTimesCircle}\r\n                />\r\n            )}\r\n            {focused && (\r\n                <motion.div\r\n                    initial={{\r\n                        opacity: 0,\r\n                    }}\r\n                    animate={{\r\n                        opacity: 1,\r\n                    }}\r\n                    transition={{ duration: 0.1 }}\r\n                    className=\"user-search-suggestion\"\r\n                    id=\"user-search-suggestion\">\r\n                    <div className=\"pointer\"></div>\r\n                    <div\r\n                        className=\"content\"\r\n                        id=\"user-search-suggestion-content\">\r\n                        <h4 className=\"quark\">Search Results</h4>\r\n                        <div className=\"content__list\">\r\n                            {searchResults.length ? (\r\n                                <ul>{buildSuggestionList()}</ul>\r\n                            ) : (\r\n                                <p className=\"content__list__fallback\">\r\n                                    Nothing here to display\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </motion.div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import SearchBar from \"../search-bar/SearchBar\";\r\nimport \"./Navbar.scss\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav id=\"nav\">\r\n            <div className=\"navbar\">\r\n                <div id=\"logo\">\r\n                    <p>Social App</p>\r\n                </div>\r\n                <SearchBar />\r\n                <div id=\"nav-container\"></div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import { AppAction } from \"../../interfaces/action\";\r\nimport { User } from \"../../interfaces/user\";\r\n\r\nexport const GET_USERS = \"get_users\";\r\nexport const SET_USERS = \"set_users\";\r\n\r\nexport const getUsers = (): AppAction<any> => ({ type: GET_USERS });\r\nexport const setUsers = (users: User[]): AppAction<User[]> => ({\r\n    type: SET_USERS,\r\n    data: users,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Feed from \"../../components/feed/feed\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { useAppSelector } from \"../../redux/utils\";\r\nimport { getUsers } from \"./actions\";\r\n\r\nconst Home: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n    }, []);\r\n    const allUsers = useAppSelector((state) => state.user.users);\r\n    return (\r\n        <React.Fragment>\r\n            {allUsers.length ? (\r\n                <>\r\n                    <Navbar />\r\n                    <Feed />\r\n                </>\r\n            ) : (\r\n                <span>loading...</span>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Home from \"./screens/home/home\";\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_POSTS } from \"../../components/feed/actions\";\r\nimport { AppAction } from \"../../interfaces/action\";\r\nimport { Post } from \"../../interfaces/post\";\r\n\r\nconst initialState: {\r\n    posts: Post[];\r\n} = {\r\n    posts: [],\r\n};\r\n\r\nexport const feedReducer = (state = initialState, action: AppAction<any>) => {\r\n    switch (action.type) {\r\n        case SET_POSTS:\r\n            return { posts: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    SEARCH,\r\n    SET_SEARCH_RESULTS,\r\n} from \"../../components/search-bar/actions\";\r\nimport { AppAction } from \"../../interfaces/action\";\r\nimport { User } from \"../../interfaces/user\";\r\n\r\nconst initialState: {\r\n    users: User[];\r\n} = {\r\n    users: [],\r\n};\r\n\r\nexport const searchReducer = (state = initialState, action: AppAction<any>) => {\r\n    switch (action.type) {\r\n        case SET_SEARCH_RESULTS:\r\n            return { users: action.data as User[] };\r\n        // case SEARCH:\r\n        //     const searchResult = globalState.user.users.filter(\r\n        //         (e) =>\r\n        //             e.name.startsWith(action.data) ||\r\n        //             e.username.startsWith(action.data)\r\n        //     );\r\n        //     return { users: searchResult };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { AppAction } from \"../../interfaces/action\";\r\nimport { User } from \"../../interfaces/user\";\r\nimport { GET_USERS, SET_USERS } from \"../../screens/home/actions\";\r\n\r\nconst initialState: {\r\n    users: User[];\r\n} = {\r\n    users: [],\r\n};\r\n\r\nexport const userReducer = (state = initialState, action: AppAction<any>) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return { users: action.data as User[] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import axios from \"axios\";\r\nimport { Post } from \"../interfaces/post\";\r\nimport { User } from \"../interfaces/user\";\r\n\r\nconst BASE_URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\nexport const user = {\r\n    getAllUsers: async () => {\r\n        const response = await axios.get<User[]>(`${BASE_URL}/users`);\r\n        const users = response.data;\r\n        return users;\r\n    },\r\n    getUser: async (id: number) => {\r\n        const response = await axios.get<User>(`${BASE_URL}/users/${id}`);\r\n        const user = response.data;\r\n        return user;\r\n    },\r\n};\r\n\r\nexport const post = {\r\n    getPosts: async () => {\r\n        const response = await axios.get<Post[]>(`${BASE_URL}/posts`);\r\n        const posts = response.data;\r\n        return posts;\r\n    },\r\n};\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { post } from \"../../network-requests/requests\";\r\nimport { GET_POSTS, setPosts } from \"./actions\";\r\n\r\nexport const feedSagas = [takeLatest(GET_POSTS, handleGetPosts)];\r\n\r\nexport function* handleGetPosts(): any {\r\n    try {\r\n        const response = yield call(post.getPosts);\r\n        yield put(setPosts(response));\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport store from \"../../redux/store\";\r\nimport { SEARCH, setSearchResults } from \"./actions\";\r\n\r\nexport const searchSagas = [takeLatest(SEARCH, handleUserSearch)];\r\n\r\nexport function* handleUserSearch(action: any): any {\r\n    try {\r\n        if (action.data === \"\") {\r\n            yield put(setSearchResults([]));\r\n        } else {\r\n            const response = store\r\n                .getState()\r\n                .user.users.filter(\r\n                    (e) =>\r\n                        e.name\r\n                            .toLowerCase()\r\n                            .includes(action.data.toLowerCase()) ||\r\n                        e.username\r\n                            .toLowerCase()\r\n                            .includes(action.data.toLowerCase())\r\n                );\r\n            yield put(setSearchResults(response));\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { user } from \"../../network-requests/requests\";\r\nimport { GET_USERS, setUsers } from \"./actions\";\r\n\r\nexport const homeSagas = [takeLatest(GET_USERS, handleGetUsers)];\r\n\r\nexport function* handleGetUsers(): any {\r\n    try {\r\n        const users = yield call(user.getAllUsers);\r\n        yield put(setUsers(users));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { feedSagas } from \"../components/feed/saga\";\r\nimport { searchSagas } from \"../components/search-bar/saga\";\r\nimport { homeSagas } from \"../screens/home/saga\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([...feedSagas, ...searchSagas, ...homeSagas]);\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { feedReducer } from \"./reducers/feedReducer\";\r\nimport { searchReducer } from \"./reducers/searchReducer\";\r\nimport { userReducer } from \"./reducers/userReducer\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    feed: feedReducer,\r\n    search: searchReducer,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}