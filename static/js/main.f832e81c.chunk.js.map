{"version":3,"sources":["screens/home/home.tsx","App.tsx","reportWebVitals.ts","redux/reducers/userReducer.ts","redux/rootSaga.ts","redux/store.ts","index.tsx"],"names":["Home","Fragment","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","users","rootSaga","all","reducers","combineReducers","user","state","action","type","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAWeA,EATQ,WACnB,OACI,eAAC,IAAMC,SAAP,WACI,yDACA,iECWGC,MAZf,WACI,OACI,cAAC,IAAMD,SAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOE,KAAK,IAAIC,UAAWJ,WCIhCK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCNRQ,EAEF,CACAC,MAAO,I,oCCJcC,GAAV,SAAUA,IAAV,iEACX,OADW,SACLC,YAAI,IADC,uCCGf,IAAMC,EAAWC,YAAgB,CAC7BC,KFGuB,WAAmD,IAAlDC,EAAiD,uDAAzCP,EAAcQ,EAA2B,uCAGjE,OAFAA,EAAOC,KAEAF,KEHbG,EAAiBC,cAEjBC,EAAc,CAACF,GAEfG,EAAQC,YAAYV,EAAU,GAAIW,IAAe,WAAf,EAAmBH,IAE3DF,EAAeM,IAAId,GAEJW,QCTfI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRO,SAASC,eAAe,SAM5B9B,M","file":"static/js/main.f832e81c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>SITE UNDER CONSTRUCTION</h1>\r\n            <h2>WILL BE UP AND RUNNING SOON</h2>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./screens/home/home\";\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AppAction } from \"../../interfaces/action\";\r\nimport { User } from \"../../interfaces/user\";\r\n\r\nconst initialState: {\r\n    users: User[];\r\n} = {\r\n    users: [],\r\n};\r\n\r\nexport const userReducer = (state = initialState, action: AppAction<any>) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { all } from \"redux-saga/effects\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([]);\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { userReducer } from \"./reducers/userReducer\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}